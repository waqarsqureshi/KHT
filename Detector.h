#pragma once
//opencv
#include "opencv2/imgcodecs.hpp"
#include "opencv2/imgproc.hpp"
#include "opencv2/videoio.hpp"
#include <opencv2/highgui.hpp>
#include <opencv2/video.hpp>
#include "opencv2/highgui/highgui_c.h"
//C
#include <stdio.h>
#include<stdlib.h>
//C++
#include <iostream>
#include <sstream>
#include <vector>
//namespace
using namespace cv;
using namespace std;


class CDetector
{
private:
	void DetectContour(Mat& mask, Mat& color,vector<Rect>& Rects,vector<Point2d>& centers);
	void refineSegments(Mat& depth_frame, Mat& mask, Mat& dst);
	vector<Rect> rects;
	vector<Point2d> centers;
	Ptr<BackgroundSubtractor> pMOG2; //MOG2 Background subtractor
public:
	Mat fgMaskMOG2; //foreground mask generated by MOG2 method
	CDetector(int history, double varThreshold);
	vector<Point2d> Detect(Mat& depth, Mat& color);
	~CDetector(void);
};

